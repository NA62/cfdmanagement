//
// File generated by rootcint at Thu Aug  7 10:02:19 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME CFD_Frame_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CFD_Frame_Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CFD_MainFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CFD_MainFrame(void *p = 0);
   static void *newArray_CFD_MainFrame(Long_t size, void *p);
   static void delete_CFD_MainFrame(void *p);
   static void deleteArray_CFD_MainFrame(void *p);
   static void destruct_CFD_MainFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CFD_MainFrame*)
   {
      ::CFD_MainFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CFD_MainFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CFD_MainFrame", ::CFD_MainFrame::Class_Version(), "./CFD_MainFrame.h", 19,
                  typeid(::CFD_MainFrame), DefineBehavior(ptr, ptr),
                  &::CFD_MainFrame::Dictionary, isa_proxy, 4,
                  sizeof(::CFD_MainFrame) );
      instance.SetNew(&new_CFD_MainFrame);
      instance.SetNewArray(&newArray_CFD_MainFrame);
      instance.SetDelete(&delete_CFD_MainFrame);
      instance.SetDeleteArray(&deleteArray_CFD_MainFrame);
      instance.SetDestructor(&destruct_CFD_MainFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CFD_MainFrame*)
   {
      return GenerateInitInstanceLocal((::CFD_MainFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CFD_MainFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CFD_MainFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CFD_MainFrame::Class_Name()
{
   return "CFD_MainFrame";
}

//______________________________________________________________________________
const char *CFD_MainFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CFD_MainFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CFD_MainFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CFD_MainFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CFD_MainFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CFD_MainFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CFD_MainFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CFD_MainFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CFD_MainFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class CFD_MainFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CFD_MainFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(CFD_MainFrame::Class(),this);
   }
}

//______________________________________________________________________________
void CFD_MainFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CFD_MainFrame.
      TClass *R__cl = ::CFD_MainFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CFD_MainFrame(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CFD_MainFrame : new ::CFD_MainFrame;
   }
   static void *newArray_CFD_MainFrame(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CFD_MainFrame[nElements] : new ::CFD_MainFrame[nElements];
   }
   // Wrapper around operator delete
   static void delete_CFD_MainFrame(void *p) {
      delete ((::CFD_MainFrame*)p);
   }
   static void deleteArray_CFD_MainFrame(void *p) {
      delete [] ((::CFD_MainFrame*)p);
   }
   static void destruct_CFD_MainFrame(void *p) {
      typedef ::CFD_MainFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CFD_MainFrame

/********************************************************
* CFD_Frame_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCFD_Frame_Dict();

extern "C" void G__set_cpp_environmentCFD_Frame_Dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CFD_MainFrame.h");
  G__cpp_reset_tagtableCFD_Frame_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevCFD_Frame_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CFD_MainFrame */
static int G__CFD_Frame_Dict_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CFD_MainFrame*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CFD_MainFrame*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((CFD_MainFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((CFD_MainFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((CFD_MainFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((CFD_MainFrame*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CFD_MainFrame*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CFD_MainFrame*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CFD_MainFrame*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CFD_MainFrame*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("EmitVA: more than 56 var args\n");
   }
      ((CFD_MainFrame*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CFD_MainFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CFD_MainFrame[n];
     } else {
       p = new((void*) gvp) CFD_MainFrame[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CFD_MainFrame;
     } else {
       p = new((void*) gvp) CFD_MainFrame;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CFD_Frame_DictLN_CFD_MainFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CFD_MainFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CFD_MainFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CFD_MainFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CFD_MainFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CFD_MainFrame*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CFD_MainFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CFD_MainFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CFD_MainFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CFD_MainFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CFD_Frame_Dict_189_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CFD_MainFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CFD_MainFrame G__TCFD_MainFrame;
static int G__CFD_Frame_Dict_189_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CFD_MainFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CFD_MainFrame*) (soff+(sizeof(CFD_MainFrame)*i)))->~G__TCFD_MainFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CFD_MainFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CFD_MainFrame*) (soff))->~G__TCFD_MainFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CFD_MainFrame */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCFD_Frame_Dict {
 public:
  G__Sizep2memfuncCFD_Frame_Dict(): p(&G__Sizep2memfuncCFD_Frame_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCFD_Frame_Dict::*p)();
};

size_t G__get_sizep2memfuncCFD_Frame_Dict()
{
  G__Sizep2memfuncCFD_Frame_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCFD_Frame_Dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCFD_Frame_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CFD_Frame_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CFD_Frame_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CFD_Frame_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CFD_Frame_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CFD_Frame_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CFD_Frame_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CFD_MainFrame */
static void G__setup_memvarCFD_MainFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CFD_Frame_DictLN_CFD_MainFrame));
   { CFD_MainFrame *p; p=(CFD_MainFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_TGMainFrame),-1,-2,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_TGStatusBar),-1,-2,4,"statusBar_=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CFD_Frame_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCFD_Frame_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCFD_MainFrame(void) {
   /* CFD_MainFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CFD_Frame_DictLN_CFD_MainFrame));
   G__memfunc_setup("GetListOfSignals",1602,G__CFD_Frame_Dict_189_0_1, 85, G__get_linked_tagnum(&G__CFD_Frame_DictLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__CFD_Frame_Dict_189_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__CFD_Frame_Dict_189_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__CFD_Frame_Dict_189_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__CFD_Frame_Dict_189_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__CFD_Frame_Dict_189_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__CFD_Frame_Dict_189_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__CFD_Frame_Dict_189_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__CFD_Frame_Dict_189_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__CFD_Frame_Dict_189_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CFD_MainFrame",1180,G__CFD_Frame_Dict_189_0_26, 105, G__get_linked_tagnum(&G__CFD_Frame_DictLN_CFD_MainFrame), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__CFD_Frame_Dict_189_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CFD_Frame_Dict_189_0_28, 85, G__get_linked_tagnum(&G__CFD_Frame_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CFD_MainFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CFD_Frame_Dict_189_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CFD_MainFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CFD_Frame_Dict_189_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CFD_MainFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CFD_Frame_Dict_189_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CFD_MainFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CFD_Frame_Dict_189_0_32, 85, G__get_linked_tagnum(&G__CFD_Frame_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CFD_Frame_Dict_189_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CFD_Frame_Dict_189_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CFD_Frame_Dict_189_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CFD_Frame_Dict_189_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CFD_MainFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CFD_Frame_Dict_189_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CFD_MainFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CFD_Frame_Dict_189_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CFD_MainFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CFD_Frame_Dict_189_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CFD_MainFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CFD_MainFrame", 1306, G__CFD_Frame_Dict_189_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCFD_Frame_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCFD_Frame_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCFD_Frame_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CFD_Frame_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__CFD_Frame_DictLN_CFD_MainFrame = { "CFD_MainFrame" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCFD_Frame_Dict() {
  G__CFD_Frame_DictLN_TClass.tagnum = -1 ;
  G__CFD_Frame_DictLN_TBuffer.tagnum = -1 ;
  G__CFD_Frame_DictLN_TMemberInspector.tagnum = -1 ;
  G__CFD_Frame_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CFD_Frame_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CFD_Frame_DictLN_TList.tagnum = -1 ;
  G__CFD_Frame_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CFD_Frame_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CFD_Frame_DictLN_TQObjSender.tagnum = -1 ;
  G__CFD_Frame_DictLN_TGMainFrame.tagnum = -1 ;
  G__CFD_Frame_DictLN_TGStatusBar.tagnum = -1 ;
  G__CFD_Frame_DictLN_CFD_MainFrame.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCFD_Frame_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TList);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_TGStatusBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CFD_Frame_DictLN_CFD_MainFrame),sizeof(CFD_MainFrame),-1,263424,(char*)NULL,G__setup_memvarCFD_MainFrame,G__setup_memfuncCFD_MainFrame);
}
extern "C" void G__cpp_setupCFD_Frame_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCFD_Frame_Dict()");
  G__set_cpp_environmentCFD_Frame_Dict();
  G__cpp_setup_tagtableCFD_Frame_Dict();

  G__cpp_setup_inheritanceCFD_Frame_Dict();

  G__cpp_setup_typetableCFD_Frame_Dict();

  G__cpp_setup_memvarCFD_Frame_Dict();

  G__cpp_setup_memfuncCFD_Frame_Dict();
  G__cpp_setup_globalCFD_Frame_Dict();
  G__cpp_setup_funcCFD_Frame_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCFD_Frame_Dict();
  return;
}
class G__cpp_setup_initCFD_Frame_Dict {
  public:
    G__cpp_setup_initCFD_Frame_Dict() { G__add_setup_func("CFD_Frame_Dict",(G__incsetup)(&G__cpp_setupCFD_Frame_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCFD_Frame_Dict() { G__remove_setup_func("CFD_Frame_Dict"); }
};
G__cpp_setup_initCFD_Frame_Dict G__cpp_setup_initializerCFD_Frame_Dict;

